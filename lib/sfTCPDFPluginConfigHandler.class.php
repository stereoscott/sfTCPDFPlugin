<?php

/**
 * This class handles the configuration of the plugin.
 * 
 * /!\ The 1.2 is still under dev, it is not working yet. /!\ 
 * 
 * @see config/config_handlers.yml
 * @see config/pdf_configs.yml
 *
 * @package    sfTCPDFPlugin
 * @author     COil
 * @since      1.6.0 - 7 avr 2009
 */

class sfTCPDFPluginConfigHandler extends sfYamlConfigHandler
{
  // Namespace of plugin configuration
  protected static 
    $namespace           = 'sfTCPDFPlugin',
    $config_file_pattern = 'config/pdf_configs.yml';

  /**
   * Specific yml parse function.
   *
   * @param Array $configFiles
   * @return Array
   */
  public function execute($configFiles)
  {
    $config = self::getConfiguration($configFiles);

    // compile data
    $retval = "<?php\n".
              "// This a cache config file for the sfTCPDFPlugin \n".
              "//\n".
              "// auto-generated by %s\n".
              "// date: %s\nreturn %s;\n".
              "//\n";

    $retval = sprintf($retval, __CLASS__, date('Y/m/d H:i:s'), var_export($config, true));

    return $retval;
  }

  /**
   * Get the plugin configuration.
   * 
   * @see sfConfigHandler
   */
  static public function getConfiguration(array $configFiles)
  {
    return self::parseYamls($configFiles);
  }  

  /**
   * Load the config.
   * 
   * @author COil
   * @since  6 august 08
   */  
  public static function load()
  {
    $config = sfConfig::get(self::$namespace);
    
    if (!$config)
    {
      $config = self::checkAndGet();
      sfConfig::set(self::$namespace, $config);
    }
    
    return $config;
  }

  /**
   * Generate the config file if not present and return it.
   * 
   * @author COil
   * @since  V1.6.0 - 7 apr 09
   * 
   * @return Array
   */
  public static function checkAndGet()
  {
    $config = include(sfContext::getInstance()->getConfigCache()->checkConfig(self::$config_file_pattern));

    return $config;
  }

  /**
   * Return all the configuration structure.
   * 
   * @author COil
   * @since  V1.6.0 - 7 apr 09 
   *
   * @return Array
   */
  public static function getAll()
  {
    return self::load();
  }
}